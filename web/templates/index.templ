package templates

import (
	"fmt"
	"net/url"
)

type Me struct {
	DisplayName string `json:"usual_full_name"`
	Campus []struct {
		ID int `json:"id"`
	} `json:"campus"`
}

func getOauthUrl(clientId string, redirectUri string) templ.SafeURL {
	return templ.SafeURL(fmt.Sprintf(
		   "https://api.intra.42.fr/oauth/authorize?client_id=%s&redirect_uri=%s&scope=public&response_type=code",
		   clientId, url.QueryEscape(redirectUri),
	))
}

templ LoggedOutIndex(clientId string, redirectUri string) {
	@header()
	<div class="grid place-items-center h-[85%]">
		<span>
			<a class="text-7xl inline" href={ getOauthUrl(clientId, redirectUri) }>
				Login with <img class="w-28 inline" src="https://meta.intra.42.fr/assets/42_logo-7dfc9110a5319a308863b96bda33cea995046d1731cebb735e41b16255106c12.svg" />
			</a>
		</span>
	</div>
}

script removeCodeParam() {
	const location = new URL(window.location.href);
	location.searchParams.delete("code");
	history.replaceState(null, "", location.href);
}

templ LoggedInIndex(them *Me, err error) {
	@header()
	<div class="grid place-items-center h-[85%]">
		if err != nil {
			<span>An error occurred: { fmt.Sprintf("%v", err) }</span>
		} else {
			<span class="text-7xl">Welcome back, { them.DisplayName }!</span>
		}
	</div>
	@removeCodeParam()
}
