package templates

import (
	"strconv"
	"github.com/demostanis/42evaluators/internal/clusters"
)

script cropToContent() {
	// TODO: this doesn't work properly on
	// some clusters such as C4 - VOID
	const s = document.querySelector("svg");
	const r = s.getBBox({ stroke: true });
	const navbarHeight = document.querySelector(".navbar").getBoundingClientRect().height;
	s.setAttribute("viewBox", `${r.x} ${r.y} ${r.width} ${r.height}`);
}

script selectHandler() {
	function handle(e) {
		const search = new URLSearchParams(window.location.search);
		const newCluster = e.target.selectedOptions[0].value;
		if (search.get("cluster") != newCluster) {
			search.delete("cluster");
			search.append("cluster", newCluster);
			window.location.search = search;
		}
	}

	document.querySelector("#cluster")
		.addEventListener("change", handle);
}

templ ClustersMap(allClusters []clusters.Cluster, selectedCluster clusters.Cluster) {
	@header()

	<style>body{overflow:hidden}</style>
	<script src="static/clusters.js"></script>
	<div id="main" class="flex place-content-center w-full h-full mt-1">
		@templ.Raw(selectedCluster.Svg)
		<select class="select select-bordered ml-8 mt-5 absolute left-0" id="cluster">
			for _, cluster := range allClusters {
				<option
					if selectedCluster.Id == cluster.Id {
						disabled selected
					}
					value={ strconv.Itoa(cluster.Id) }
				>{ cluster.DisplayName }</option>
			}
		</select>
		@cropToContent()
		@selectHandler()
	</div>
}
