package web

import (
	"github.com/demostanis/42evaluators/internal/models"
	"fmt"
	"strconv"
	"strings"
)

func getIsActiveClass(isActive bool) string {
	var isActiveClass string
	if isActive {
		isActiveClass = "btn-active"
	}
	return isActiveClass
}

func getLinkForPage(page int) string {
	if page == 1 {
		return "/leaderboard"
	}
	return fmt.Sprintf("/leaderboard?page=%d", page)
}

func getProfileUrl(user models.User) templ.SafeURL {
	return templ.SafeURL("https://profile.intra.42.fr/users/" + user.Login)
}

func getBgUrl(user models.User) string {
	return "bg-[url(" + user.Coalition.CoverUrl + ")]"
}

templ pageButton(page int, text string, isActive bool, isLock bool) {
	<button
		if isLock {
			disabled
		}
		class={ "join-item", "btn", "btn-md", getIsActiveClass(isActive) }
		hx-post={ getLinkForPage(page) }
		hx-target="#main"
		hx-swap="outerHTML"
		hx-replace-url="true"
	>{ text }</button>
}

func isDisabled(targetedPage int, totalPage int) bool {
	if targetedPage < 1 || targetedPage > totalPage {
		return true
	}
	return false
}

templ pagination(page int, totalPages int) {
	<div class="join justify-center flex py-4">
		@pageButton(page - 1, "«", false, isDisabled(page-1, totalPages + 1))
		for i := 1; i <= totalPages + 1; i++ {
			@pageButton(i, strconv.Itoa(i), i == page, false)
		}
		@pageButton(page + 1, "»", false, isDisabled(page+1, totalPages + 1))
	</div>
}

templ leaderboard(users []models.User, page int, totalPages int64, offset int) {
	@header()
	<div id="main">
		@pagination(page, int(totalPages))
		<table class="table">
			<thead>
				<tr class="text-2xl">
					<th>Position</th>
					<th>Profile picture</th>
					<th>User</th>
					<th>Level</th>
					<th>Correction points</th>
				</tr>
			</thead>
			<tbody>
				for i, user := range users {
					<tr class={ "text-xl", getBgUrl(user) }>
						<td>{ strconv.Itoa(i + offset + 1) }.</td>
						<td>
							<div class="avatar placeholder w-24 h-24 object-contain">
								<img class="rounded-full" src={ user.ImageLink }/>
							</div>
						</td>
						<td>
							<a href={ getProfileUrl(user) }>
								{ strings.Replace(user.Title.Name, "%login", user.Login, -1) }
							</a>
						</td>
						<td>{ fmt.Sprintf("%.2f", user.Level) }</td>
						<td>{ fmt.Sprintf("%d", user.CorrectionPoints) }</td>
					</tr>
				}
			</tbody>
		</table>
		@pagination(page, int(totalPages))
	</div>
}
